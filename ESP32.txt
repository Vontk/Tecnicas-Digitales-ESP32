#include <WiFi.h>
#include <esp_now.h>

int ledPin = 2;  // Pin del LED en el ESP32

// Función callback para recibir datos
void OnDataRecv(const esp_now_recv_info *recv_info, const uint8_t *data, int data_len) {
  String receivedMessage = "";
  for (int i = 0; i < data_len; i++) {
    receivedMessage += (char)data[i];
  }

  if (receivedMessage == "1") {
    digitalWrite(ledPin, HIGH);  // Encender el LED
    delay(5000);
    receivedMessage = "0";
  } else {
    digitalWrite(ledPin, LOW);  // Apagar el LED si el mensaje no es "1"
  }

  // Mostrar la dirección MAC del remitente
  char macStr[18];
  snprintf(macStr, sizeof(macStr), "%02X:%02X:%02X:%02X:%02X:%02X",
           recv_info->src_addr[0], recv_info->src_addr[1], recv_info->src_addr[2],
           recv_info->src_addr[3], recv_info->src_addr[4], recv_info->src_addr[5]);
  Serial.print("Mensaje recibido de: ");
  Serial.println(macStr);
}

void setup() {
  Serial.begin(115200);
  pinMode(ledPin, OUTPUT);
  digitalWrite

(ledPin, LOW);  // Apagar el LED al inicio

  // Inicializar Wi-Fi en modo estación
  WiFi.mode(WIFI_STA);

  // Inicializar ESP-NOW
  if (esp_now_init() != 0) {
    Serial.println("Error inicializando ESP-NOW");
    return;
  }

  // Registrar callback para cuando se recibe un mensaje
  esp_now_register_recv_cb(OnDataRecv);
}

void loop() {
  // El ESP32 está a la espera de recibir datos a través de ESP-NOW
}